// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

type ApplicationConfigInput struct {
	Policies     []*PolicyInput         `json:"policies"`
	Acls         []*ChannelACLInput     `json:"acls"`
	Capabilities []string               `json:"capabilities"`
	Orgs         []*ChannelOrganization `json:"orgs"`
}

type Channel struct {
	Name   string `json:"name"`
	Height int    `json:"height"`
	Config string `json:"config"`
}

type ChannelACLInput struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

type ChannelConfig struct {
	Application *ApplicationConfigInput `json:"application"`
	Orderer     *OrdererConfigInput     `json:"orderer"`
	Channel     *ChannelConfigInput     `json:"channel"`
}

type ChannelConfigInput struct {
	Policies     []*PolicyInput `json:"policies"`
	Capabilities []string       `json:"capabilities"`
}

type ChannelOrdererInput struct {
	Dc        string `json:"dc"`
	Name      string `json:"name"`
	Namespace string `json:"namespace"`
}

type ChannelOrdererOrgInput struct {
	MspID    string                 `json:"mspID"`
	Orderers []*ChannelOrdererInput `json:"orderers"`
}

type ChannelOrganization struct {
	MspID            string                 `json:"mspID"`
	ModPolicy        string                 `json:"modPolicy"`
	Policies         []*PolicyInput         `json:"policies"`
	Msp              *MSPInput              `json:"msp"`
	AnchorPeers      []*NetworkAddressInput `json:"anchorPeers"`
	OrdererEndpoints []string               `json:"ordererEndpoints"`
}

type ChannelPeerOrgInput struct {
	MspID string `json:"mspID"`
}

type ComputeChannelResponse struct {
	Name            string `json:"name"`
	ChannelProtoB64 string `json:"channelProtoB64"`
	ChannelJSONB64  string `json:"channelJsonB64"`
}

type CryptoConfigInput struct {
	SignatureHashFamily            string `json:"signatureHashFamily"`
	IdentityIdentifierHashFunction string `json:"identityIdentifierHashFunction"`
}

type EtcdRaftInput struct {
	Consenters []*OrdererConfigRaftConsenterInput `json:"consenters"`
	Options    *OrdererConfigRaftOptionsInput     `json:"options"`
}

type MSPInput struct {
	Name                 string               `json:"name"`
	RootCerts            []string             `json:"rootCerts"`
	IntermediateCerts    []string             `json:"intermediateCerts"`
	Admins               []string             `json:"admins"`
	RevocationList       []string             `json:"revocationList"`
	Ous                  []*OUIdentifierInput `json:"ous"`
	TLSRootCerts         []string             `json:"tlsRootCerts"`
	TLSIntermediateCerts []string             `json:"tlsIntermediateCerts"`
	NodeOUs              *NodeOUsInput        `json:"nodeOUs"`
	CryptoConfig         *CryptoConfigInput   `json:"cryptoConfig"`
}

type NetworkAddressInput struct {
	Host string `json:"host"`
	Port int    `json:"port"`
}

type NodeOUsInput struct {
	Enable              bool               `json:"enable"`
	ClientOUIdentifier  *OUIdentifierInput `json:"clientOUIdentifier"`
	PeerOUIdentifier    *OUIdentifierInput `json:"peerOUIdentifier"`
	AdminOUIdentifier   *OUIdentifierInput `json:"adminOUIdentifier"`
	OrdererOUIdentifier *OUIdentifierInput `json:"ordererOUIdentifier"`
}

type OUIdentifierInput struct {
	Certificate  string `json:"certificate"`
	OuIdentifier string `json:"ouIdentifier"`
}

type OrdererConfigBatchSizeInput struct {
	MaxMessageCount   int `json:"maxMessageCount"`
	AbsoluteMaxBytes  int `json:"absoluteMaxBytes"`
	PreferredMaxBytes int `json:"preferredMaxBytes"`
}

type OrdererConfigInput struct {
	BatchTimeout  *int                         `json:"batchTimeout"`
	State         *string                      `json:"state"`
	EtcdRaft      *EtcdRaftInput               `json:"etcdRaft"`
	Policies      []*PolicyInput               `json:"policies"`
	Capabilities  []string                     `json:"capabilities"`
	Organizations []*ChannelOrganization       `json:"organizations"`
	BatchSize     *OrdererConfigBatchSizeInput `json:"batchSize"`
}

type OrdererConfigRaftConsenterInput struct {
	Address       *NetworkAddressInput `json:"address"`
	ClientTLSCert string               `json:"clientTlsCert"`
	ServerTLSCert string               `json:"serverTlsCert"`
}

type OrdererConfigRaftOptionsInput struct {
	TickInterval         string `json:"tickInterval"`
	ElectionTick         int    `json:"electionTick"`
	HeartbeatTick        int    `json:"heartbeatTick"`
	MaxInflightBlocks    int    `json:"maxInflightBlocks"`
	SnapshotIntervalSize int    `json:"snapshotIntervalSize"`
}

type Org struct {
	MspID             string `json:"mspId"`
	SignCACertificate string `json:"signCACertificate"`
	TLSCACertificate  string `json:"tlsCACertificate"`
}

type OrgDefinition struct {
	SignCACertificate string `json:"signCACertificate"`
	TLSCACertificate  string `json:"tlsCACertificate"`
	MspID             string `json:"mspID"`
}

type PolicyInput struct {
	Key       string `json:"key"`
	Type      string `json:"type"`
	Rule      string `json:"rule"`
	ModPolicy string `json:"modPolicy"`
}

type SyncChannelResponse struct {
	Success    bool   `json:"success"`
	OutputJSON string `json:"outputJson"`
	OutputPb   string `json:"outputPB"`
}
